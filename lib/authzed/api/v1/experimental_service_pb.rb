# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: authzed/api/v1/experimental_service.proto

require 'google/protobuf'

require 'google/api/annotations_pb'
require 'validate/validate_pb'
require 'authzed/api/v1/core_pb'
require 'authzed/api/v1/permission_service_pb'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("authzed/api/v1/experimental_service.proto", :syntax => :proto3) do
    add_message "authzed.api.v1.BulkImportRelationshipsRequest" do
      repeated :relationships, :message, 1, "authzed.api.v1.Relationship", json_name: "relationships"
    end
    add_message "authzed.api.v1.BulkImportRelationshipsResponse" do
      optional :num_loaded, :uint64, 1, json_name: "numLoaded"
    end
    add_message "authzed.api.v1.BulkExportRelationshipsRequest" do
      optional :consistency, :message, 1, "authzed.api.v1.Consistency", json_name: "consistency"
      optional :optional_limit, :uint32, 2, json_name: "optionalLimit"
      optional :optional_cursor, :message, 3, "authzed.api.v1.Cursor", json_name: "optionalCursor"
    end
    add_message "authzed.api.v1.BulkExportRelationshipsResponse" do
      optional :after_result_cursor, :message, 1, "authzed.api.v1.Cursor", json_name: "afterResultCursor"
      repeated :relationships, :message, 2, "authzed.api.v1.Relationship", json_name: "relationships"
    end
  end
end

module Authzed
  module Api
    module V1
      BulkImportRelationshipsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("authzed.api.v1.BulkImportRelationshipsRequest").msgclass
      BulkImportRelationshipsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("authzed.api.v1.BulkImportRelationshipsResponse").msgclass
      BulkExportRelationshipsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("authzed.api.v1.BulkExportRelationshipsRequest").msgclass
      BulkExportRelationshipsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("authzed.api.v1.BulkExportRelationshipsResponse").msgclass
    end
  end
end
