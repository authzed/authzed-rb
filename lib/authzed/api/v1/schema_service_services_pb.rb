# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: authzed/api/v1/schema_service.proto for package 'authzed.api.v1'

require 'grpc'
require 'authzed/api/v1/schema_service_pb'

module Authzed
  module Api
    module V1
      module SchemaService
        # SchemaService implements operations on a Permissions System's Schema.
        class Service

          include ::GRPC::GenericService

          self.marshal_class_method = :encode
          self.unmarshal_class_method = :decode
          self.service_name = 'authzed.api.v1.SchemaService'

          # Read returns the current Object Definitions for a Permissions System.
          #
          # Errors include:
          # - INVALID_ARGUMENT: a provided value has failed to semantically validate
          # - NOT_FOUND: no schema has been defined
          rpc :ReadSchema, ::Authzed::Api::V1::ReadSchemaRequest, ::Authzed::Api::V1::ReadSchemaResponse
          # Write overwrites the current Object Definitions for a Permissions System.
          rpc :WriteSchema, ::Authzed::Api::V1::WriteSchemaRequest, ::Authzed::Api::V1::WriteSchemaResponse
          # ReflectSchema reflects the current schema stored in SpiceDB, returning a structural
          # form of the schema for use by client tooling.
          rpc :ReflectSchema, ::Authzed::Api::V1::ReflectSchemaRequest, ::Authzed::Api::V1::ReflectSchemaResponse
          # ComputablePermissions returns the set of permissions that compute based off a relation
          # in the current schema. For example, if the schema has a relation `viewer` and a permission
          # `view` defined as `permission view = viewer + editor`, then the
          # computable permissions for the relation `viewer` will include `view`.
          rpc :ComputablePermissions, ::Authzed::Api::V1::ComputablePermissionsRequest, ::Authzed::Api::V1::ComputablePermissionsResponse
          # DependentRelations returns the set of relations and permissions that used
          # to compute a permission, recursively, in the current schema. It is the
          # inverse of the ComputablePermissions API.
          rpc :DependentRelations, ::Authzed::Api::V1::DependentRelationsRequest, ::Authzed::Api::V1::DependentRelationsResponse
          # DiffSchema returns the difference between the specified schema and the current
          # schema stored in SpiceDB.
          rpc :DiffSchema, ::Authzed::Api::V1::DiffSchemaRequest, ::Authzed::Api::V1::DiffSchemaResponse
        end

        Stub = Service.rpc_stub_class
      end
    end
  end
end
