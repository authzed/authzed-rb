# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: authzed/api/v1/permission_service.proto for package 'authzed.api.v1'

require 'grpc'
require 'authzed/api/v1/permission_service_pb'

module Authzed
  module Api
    module V1
      module PermissionsService
        # PermissionsService is used to perform permissions and relationship
        # operations.
        class Service

          include ::GRPC::GenericService

          self.marshal_class_method = :encode
          self.unmarshal_class_method = :decode
          self.service_name = 'authzed.api.v1.PermissionsService'

          # ReadRelationships reads a set of the relationships matching one or more
          # filters.
          rpc :ReadRelationships, ::Authzed::Api::V1::ReadRelationshipsRequest, stream(::Authzed::Api::V1::ReadRelationshipsResponse)
          # WriteRelationships writes and/or deletes a set of specified relationships,
          # with an optional set of precondition relationships that must exist before
          # the operation can commit.
          rpc :WriteRelationships, ::Authzed::Api::V1::WriteRelationshipsRequest, ::Authzed::Api::V1::WriteRelationshipsResponse
          # DeleteRelationships deletes relationships matching one or more filters, in
          # bulk.
          rpc :DeleteRelationships, ::Authzed::Api::V1::DeleteRelationshipsRequest, ::Authzed::Api::V1::DeleteRelationshipsResponse
          # CheckPermission checks whether a subject has a particular permission or is
          # a member of a particular relation, on a given resource.
          rpc :CheckPermission, ::Authzed::Api::V1::CheckPermissionRequest, ::Authzed::Api::V1::CheckPermissionResponse
          # ExpandPermissionTree expands the relationships reachable from a particular
          # permission or relation of a given resource.
          rpc :ExpandPermissionTree, ::Authzed::Api::V1::ExpandPermissionTreeRequest, ::Authzed::Api::V1::ExpandPermissionTreeResponse
          # LookupResources returns the IDs of all resources on which the specified
          # subject has permission or on which the specified subject is a member of the
          # relation.
          rpc :LookupResources, ::Authzed::Api::V1::LookupResourcesRequest, stream(::Authzed::Api::V1::LookupResourcesResponse)
        end

        Stub = Service.rpc_stub_class
      end
    end
  end
end
