# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: authzed/api/v1/permission_service.proto for package 'authzed.api.v1'

require 'grpc'
require 'authzed/api/v1/permission_service_pb'

module Authzed
  module Api
    module V1
      module PermissionsService
        # PermissionsService implements a set of RPCs that perform operations on
        # relationships and permissions.
        class Service

          include ::GRPC::GenericService

          self.marshal_class_method = :encode
          self.unmarshal_class_method = :decode
          self.service_name = 'authzed.api.v1.PermissionsService'

          # ReadRelationships reads a set of the relationships matching one or more
          # filters.
          rpc :ReadRelationships, ::Authzed::Api::V1::ReadRelationshipsRequest, stream(::Authzed::Api::V1::ReadRelationshipsResponse)
          # WriteRelationships atomically writes and/or deletes a set of specified
          # relationships. An optional set of preconditions can be provided that must
          # be satisfied for the operation to commit.
          rpc :WriteRelationships, ::Authzed::Api::V1::WriteRelationshipsRequest, ::Authzed::Api::V1::WriteRelationshipsResponse
          # DeleteRelationships atomically bulk deletes all relationships matching the
          # provided filter. If no relationships match, none will be deleted and the
          # operation will succeed. An optional set of preconditions can be provided that must
          # be satisfied for the operation to commit.
          rpc :DeleteRelationships, ::Authzed::Api::V1::DeleteRelationshipsRequest, ::Authzed::Api::V1::DeleteRelationshipsResponse
          # CheckPermission determines for a given resource whether a subject computes
          # to having a permission or is a direct member of a particular relation.
          rpc :CheckPermission, ::Authzed::Api::V1::CheckPermissionRequest, ::Authzed::Api::V1::CheckPermissionResponse
          # CheckBulkPermissions evaluates the given list of permission checks
          # and returns the list of results.
          rpc :CheckBulkPermissions, ::Authzed::Api::V1::CheckBulkPermissionsRequest, ::Authzed::Api::V1::CheckBulkPermissionsResponse
          # ExpandPermissionTree reveals the graph structure for a resource's
          # permission or relation. This RPC does not recurse infinitely deep and may
          # require multiple calls to fully unnest a deeply nested graph.
          rpc :ExpandPermissionTree, ::Authzed::Api::V1::ExpandPermissionTreeRequest, ::Authzed::Api::V1::ExpandPermissionTreeResponse
          # LookupResources returns all the resources of a given type that a subject
          # can access whether via a computed permission or relation membership.
          rpc :LookupResources, ::Authzed::Api::V1::LookupResourcesRequest, stream(::Authzed::Api::V1::LookupResourcesResponse)
          # LookupSubjects returns all the subjects of a given type that
          # have access whether via a computed permission or relation membership.
          rpc :LookupSubjects, ::Authzed::Api::V1::LookupSubjectsRequest, stream(::Authzed::Api::V1::LookupSubjectsResponse)
        end

        Stub = Service.rpc_stub_class
      end
    end
  end
end
